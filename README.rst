

.. _l-README:

README / Changes
================

.. image:: https://travis-ci.org/sdpython/pyquickhelper.svg?branch=master
    :target: https://travis-ci.org/sdpython/pyquickhelper
    :alt: Build status
    
.. image:: https://ci.appveyor.com/api/projects/status/54vl69ssd8ud4l64?svg=true
    :target: https://ci.appveyor.com/project/sdpython/pyquickhelper
    :alt: Build Status Windows
    
.. image:: https://badge.fury.io/py/pyquickhelper.svg
    :target: http://badge.fury.io/py/pyquickhelper
        
.. image:: http://img.shields.io/pypi/dm/pyquickhelper.png
    :alt: PYPI Package
    :target: https://pypi.python.org/pypi/pyquickhelper
    
.. image:: https://img.shields.io/badge/license-MIT-blue.svg
    :alt: MIT License
    :target: http://opensource.org/licenses/MIT
    
.. image:: https://landscape.io/github/sdpython/pyquickhelper/master/landscape.svg?style=flat
   :target: https://landscape.io/github/sdpython/pyquickhelper/master
   :alt: Code Health
   
.. image:: https://requires.io/github/sdpython/pyquickhelper/requirements.svg?branch=master
     :target: https://requires.io/github/sdpython/pyquickhelper/requirements/?branch=master
     :alt: Requirements Status

.. image:: https://codecov.io/github/sdpython/pyquickhelper/coverage.svg?branch=master
    :target: https://codecov.io/github/sdpython/pyquickhelper?branch=master
    
.. image:: http://img.shields.io/github/issues/sdpython/pyquickhelper.png
    :alt: GitHub Issues
    :target: https://github.com/sdpython/pyquickhelper/issues
    
.. image:: https://badge.waffle.io/sdpython/pyquickhelper.png?label=ready&title=Ready
    :alt: GitHub Issues
    :target: https://waffle.io/sdpython/pyquickhelper
    

**Links:**

* `GitHub/pyquickhelper <https://github.com/sdpython/pyquickhelper>`_
* `documentation <http://www.xavierdupre.fr/app/pyquickhelper/helpsphinx/index.html>`_
* `Blog <http://www.xavierdupre.fr/app/pyquickhelper/helpsphinx/blog/main_0000.html#ap-main-0>`_

Functionalities
---------------

* simple forms in notebooks
* help generation including notebook conversion
* folder synchronization
* logging
* help running unit tests
* simple server to server sphinx documentation
* file compression, zip, gzip, 7z
* helpers for ipython notebooks (upgrade, offline run)
* parser to quickly add a magic command in a notebook
* Sphinx directives to integrate a blogpost in the documentation
* mechanism to add forms in notebooks

Design
------

This project contains the following folders:

* a source folder: *src*
* a unit test folder: *_unittests*, go to this folder and run *run_unittests.py*
* a folder: *_doc*, it will contain the documentation, a subfolder *_doc/sphinxdox/source/blog* contains blog post
  to communicate on the module
* a file *setup.py* to build and to install the module, if the source were retrieve from GitHub,
  the script can also be called with the following extra options (*python setup.py <option>*):
  * clean_space: remove extra spaces in the code
  * build_sphinx: builds the documentation
  * unittests: run the unit tests, compute the code coverage    
* a script *build_script.bat* which produces many script on Windows to easily run the setup,
  generate the documentation, run the unit tests.

Versions, Changes
-----------------

* **1.4 - 2016/??/??**
    * **change:** change behavior of function *df2rst*, more simple
    * **change:** remove all shortcuts in main ``__init__.py``
    * **change:** rename *str_to_datetime* into *str2datetime* and *datetime_to_str* into *datetime2str** 
    * **fix:** fix function *docstring2html*, does not crash when the documentation is None
    * **fix:** fix class _CustomSphinx for Sphinx 1.4
    * **change:** cache urls testing notebooks
    * **move:** move all sphinx extension to a specific folder *sphinxext*
    * **add:** add directive todoext, refactoring of the custom directives
    * **add:** rst2html is more robust, it allows latex expressions
    * **change:** update import for the latest version of Jupyter and nbconvert (2016/04/21)
    * **change:** improve the functions about compression

* **1.3.1110 - 2016/03/08**
    * **commit:** 2ab88f6545ab139c17562c1b995404e6a2d0714d
    * **add:** add function check_readme_syntax to check the syntax of file readme.rst 
      (pipy uses an earlier version of docutils)
    * **fix:** fix a bug in function *compare_module_version*
    * **add:** new function find_notebook_kernel and get_notebook_kernel to find installed kernels on a computer
    * **change:** class NotebookRunner now allows to specify a kernel name and to add extra parameters on the command line,
      this change was propagated to function find_notebook_kernel, get_notebook_kernel
    * **change:** update script generated by the module to start using jupyter short cuts instead of ipython
    * **add:** function to install notebook extension and to load them (see notebook section)
    * **add:** function *install_jupyter_kernel* to install a kernel for a notebook
    * **add:** add a filtering option to remove file from the coverage report
    * **fix:** run unit tests having SKIP in their names (it was LONG before)
    * **add:** add functions to run before and after the documentation generation 
      (to add extra files, to remove, to modify, ...)
    * **change:** function *rst2html* now interprets sphinx directives and not only directives
    * **add:** parameters *no_eval*, *eval_type* to method *add_argument* for parsers used for magic command lines, 
      it avoids the value of the parameter to be considered as a python expression or enforce the 
      type of the returned value
    * **change:** update the module to handle Python 3.5
    * **add:** add method *delete_all_jobs* to class *JenkinsExt*
    * **change:** refactor class *JenkinsExt* to handle more python versions
    * **update:** javascript producing the automated menu in a notebook was adapted to be efficient
      in a RST converted notebook
    * **add:** add script ``auto_cmd_copy_sphinx.bat`` which copies the documentation from ``_doc/sphinxdoc/build`` to ``dist``
    * **change:** use local latex engine instead of matplotlib engine to convert formulas into images
    * **add:** catch exception *SystemExit* in method *run_cmd* if required
    * **new:** documentation builds a new page gathering all commands ``@NB``
    * **new:** add function to encrypt and decrypt files using AES and pycrypto
    * **new:** add class ``EncryptedBackup`` to backup many files into a remote folder in encrypted format
    * **new:** add command line ``encrypt``, ``decrypt``, ``encrypt_file``, ``decrypt_file``
    * **new:** add magic commands (notebooks) ``encrypt_file``, ``decrypt_file``
    * **fix:** the conversion of notebooks now requires *require.js*, the script is downloaded
      where it is needed by *reveal.js*
    * **change:** sphinx command *runpython* now processes Sphinx commands such as links,
      reference or titles
    * **new:** publish coverage report to *codecov*
    * **new:** function *read_csv* to read a dataframe from a zip file (disable in the recent version of pandas)
    * **add:** catches stdout, stderr in function *main_wrapper_tests*
    * **change:** disabled pieces of code for the automated generation of documentation can be 
      enabled back when running extension *runpython*
    * **add:** add parameter *setsysvar* to function *run_python_script* and directive *runpython*
    * **new:** custom role and directive *sharenet* to share a page on networks (facebook, twitter, linkedin)
    * **new:** custom role *bigger* to add bigger text in a sphinx documentation
    * **new:** blog post add share buttons to share the link with twitter, facebook or linkedin (by default),
      to disable it, set variable *sharepost* to None in sphinx configuration
    * **add:** add option *process* to sphinx custom directive *runpython*
    * **add:** add parameter *custom_style* to the default configuration
